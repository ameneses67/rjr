---
// Librer√≠as
import { twMerge } from "tailwind-merge";

interface Props {
  classes?: string;
}

const { classes } = Astro.props;
---

<button
  id="hamburger"
  class={twMerge(classes)}
  aria-controls="primary-navigation"
  aria-expanded="false"
>
  <svg
    class="fill-slate-400 dark:fill-indigo-500"
    viewBox="0 0 100 100"
    width="35"
  >
    <rect class="line top" width="80" height="10" x="10" y="25" rx="5"></rect>
    <rect class="line middle" width="80" height="10" x="10" y="45" rx="5"
    ></rect>
    <rect class="line bottom" width="80" height="10" x="10" y="65" rx="5"
    ></rect>
  </svg>
</button>

<style>
  .line {
    transition:
      transform 300ms ease-in 300ms,
      rotate 300ms ease-in,
      opacity 0ms 300ms;
    transform-origin: center;
  }

  #hamburger[aria-expanded="true"] .line {
    transition:
      transform 300ms ease-in,
      rotate 300ms ease-in 300ms,
      opacity 0ms 300ms;
  }

  #hamburger[aria-expanded="true"] .top {
    transform: translateY(20px);
    rotate: 45deg;
  }

  #hamburger[aria-expanded="true"] .middle {
    opacity: 0;
  }

  #hamburger[aria-expanded="true"] .bottom {
    transform: translateY(-20px);
    rotate: -45deg;
  }
</style>

<script>
  const hamburger = document.querySelector("#hamburger");
  const navbar = document.querySelector("#navbar");

  hamburger?.addEventListener("click", () => {
    const isOpened = hamburger.getAttribute("aria-expanded");
    if (isOpened === "false") {
      hamburger.setAttribute("aria-expanded", "true");
      navbar?.classList.toggle("hidden");
    } else {
      hamburger.setAttribute("aria-expanded", "false");
      navbar?.classList.toggle("hidden");
    }
  });
</script>
