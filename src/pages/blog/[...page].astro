---
// Types
import type { GetStaticPaths, Page } from "astro";

interface IPost {
  data: {
    title: string;
    updateDate: Date;
    author: string;
    snippet: string;
    image: { src: ImageMetadata; alt: string };
    category: string;
  };
  slug: string;
}

// Librerías
import { getCollection } from "astro:content";

// Layouts
import MainLayout from "../../layouts/MainLayout.astro";

// Componentes
import BlogHero from "../../components/blog/BlogHero.astro";
import BlogCard from "../../components/blog/BlogCard.astro";
import Button from "../../components/elements/Button.astro";
import Link from "../../components/elements/Link.astro";

// Generar páginas con 5 artículos
export const getStaticPaths = (async ({ paginate }) => {
  // Filtrar posts draft=true y no futuros
  const publishedBlogPosts = await getCollection(
    "blog",
    ({ data }) => !data.draft && data.publishDate < new Date(),
  );
  // Ordenar posts por fecha
  publishedBlogPosts.sort(
    (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
  );
  return paginate(publishedBlogPosts, { pageSize: 3 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const title = "Blog";
const description =
  "En nuestro blog encontrarás artículos básicos que te ayudarán a empezar a educarte en finanzas personales.";
---

<MainLayout {title} {description}>
  <BlogHero />
  <section class="container mx-auto space-y-12 px-4 sm:space-y-16 sm:px-6">
    {
      page.data.map((post: IPost) => (
        <article class="mx-auto max-w-3xl space-y-6 border-b border-slate-200 pb-12 dark:border-slate-800 sm:pb-16">
          <BlogCard
            blogTitle={post.data.title}
            updatedDate={post.data.updateDate}
            author={post.data.author}
            snippet={post.data.snippet}
            imgSrc={post.data.image.src}
            imgAlt={post.data.image.alt}
            category={post.data.category}
            slug={post.slug}
          />
        </article>
      ))
    }
  </section>
  <aside class="w-full">
    <div class="container mx-auto flex justify-between px-4 sm:px-6">
      {
        page.url.prev ? (
          <Link href={page.url.prev} style="outline">
            Recientes
          </Link>
        ) : null
      }
      {
        page.url.next ? (
          <Link href={page.url.next} style="outline">
            Anteriores
          </Link>
        ) : null
      }
    </div>
  </aside>
</MainLayout>
