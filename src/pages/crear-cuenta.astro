---
// Librerías
import { XataClient } from "../xata";
import bcrypt from "bcryptjs";

// Layout
import MainLayout from "../layouts/MainLayout.astro";

// Componentes
import SignupForm from "../components/forms/SignupForm.astro";
import SectionHead from "../components/SectionHead.astro";

// Utilidades
import { isValidEmail, isValidPassword } from "../utils/utils";

const xata = new XataClient({
  apiKey: import.meta.env.XATA_API_KEY,
  branch: import.meta.env.XATA_BRANCH,
});

const isRegistered = async (correo: string) => {
  const records = await xata.db.users.filter("email", correo).getMany();
  return records.length ? true : false;
};

const errors = { username: "", email: "", password: "" };

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const name = formData.get("name") as string;
    const email = formData.get("email") as string;
    const password = formData.get("password") as string;

    // Hashing password
    const salt = bcrypt.genSaltSync(10);
    const hashPwd = bcrypt.hashSync(password, salt);

    // Validating form data
    if (typeof name !== "string" || name.length < 1) {
      errors.username += "Por favor ingresa un nombre de usuario.";
    }
    if (typeof email !== "string" || !isValidEmail(email)) {
      errors.email += "Correo electrónico no válido.";
    } else if (await isRegistered(email)) {
      errors.email +=
        "Ya existe una cuenta con este correo electrónico. Inicia sesión.";
    }
    if (typeof password !== "string" || !isValidPassword(password)) {
      errors.password +=
        "Tu contraseña debe tener de 6 a 20 caracteres y mínimo un número, una mayúscula y una minúscula.";
    }

    // Do something with the data
    const hasErrors = Object.values(errors).some((msg) => msg);
    if (!hasErrors) {
      const user = await xata.db.users.create({
        name,
        email,
        password: hashPwd,
      });

      Astro.cookies.set("userId", user.id, {
        httpOnly: true,
        secure: true,
      });
      Astro.cookies.set("userName", user.name, {
        httpOnly: true,
        secure: true,
      });
      Astro.cookies.set("userEmail", user.email!, {
        httpOnly: true,
        secure: true,
      });

      return Astro.redirect("/", 302);
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

const title = "Crear Cuenta";
const description =
  "Suscríbete y crea tu cuenta para poder dejar comentarios y estar en contacto via correo electrónico.";
---

<MainLayout {title} {description}>
  <section class="container mx-auto space-y-16 px-4 sm:px-8">
    <SectionHead tagType="h1" hClass="h1">
      <Fragment slot="title">Crear cuenta</Fragment>
      <Fragment slot="desc">
        Llena el formulario para crear una cuenta. ¡Es gratis!
      </Fragment>
    </SectionHead>
    <SignupForm text="Crear Cuenta" {errors} />
  </section>
</MainLayout>
